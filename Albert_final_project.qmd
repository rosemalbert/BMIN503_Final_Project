---
title: "Interrogating sex as a biological variable in preterm birth inequity"
subtitle: "BMIN503/EPID600 Final Project"
author: "Rose Albert"
format: html
editor: visual
number-sections: true
embed-resources: true
---

------------------------------------------------------------------------

# Interrogating sex as a biological variable in preterm birth inequity

December 13, 2024

By Rose Albert

## Overview {#sec-overview}

Preterm birth affects approximately 10% of all births, and there is a well-established male vulnerability and female resilience during the neonatal period. The goal of this project is to interrogate sex as a biological variable using county-level data from the National Vital Statistics System queried using CDC WONDER (Wide-Ranging Online Data for Epidemiologic Research). This project will assess preterm-birth rates and NICU admissions. I have spoken with two experts in perinatal health, Dr. Aimin Chen and Dr. Heather Burris, about biological and structural determinants contributing to preterm birth inequity, as well as potential areas of clinical, public health, and policy intervention.

The data for this project can be found in my [final project GitHub repository](https://github.com/rosemalbert/BMIN503_Final_Project/tree/master).

## Introduction {#sec-introduction}

More than a third of infant deaths in the US are preterm-related (Callaghan et al., 2006). Preterm birth can predispose infants to immediate risks in the neonatal period as well as long-term adverse sequelae. For example, preterm infants are born with underdeveloped lungs and often require therapeutic interventions such as surfactant administration, antibiotics, steroids, mechanical ventilation, and supplemental oxygen for survival (Thebaud et al., 2019). However, these therapeutics can also pose postnatal insults and contribute to lung injury and chronic diseases such as bronchopulmonary dysplasia (Thebaud et al., 2019). Despite advances in neonatal care that have improved overall survival of preterm infants, rates of bronchopulmonary dysplasia have continued to rise (Bell et al., 2022). Bronchopulmonary dysplasia is one of many male-biased complications of prematurity (van Westering-Kroon et al. 2021). In addition to a male disadvantage in neonatal outcomes, there is also a male vulnerability for pregnancy complications and indications for preterm birth (Inkster et al., 2021).

Interrogation of sex as a biological variable has received increasing attention as a critical area for understanding basic pathophysiology and differential response to therapeutics (Albert, Lee, & Lingappan, 2023). The NIH has also established consideration of sex as a biological variable as a research mandate ("NOT-OD-15-102", 2015). This project will investigate male susceptibility to preterm birth and NICU admission using publicly available county-level data. An understanding of preterm birth characteristics can inform neonatal care toward precision medicine approaches.

## Methods {#sec-methods}

[*Data sources*]{.underline}

*County-level Birth Characteristics Data Source:* I am using the [CDC Wonder Natality Data](https://wonder.cdc.gov/wonder/help/Natality-expanded.html#) (2023) grouped by "County of Residence," "Sex of Infant," "NICU Admission," and "OE Gestational Age Recode 10," with the measures "Births" and "Percent of Total Births."

*Mapping Data Source:* I am drawing from Assignment 5 to use geospatial data, tidy census, and leaflet to generate interactive maps.update.packages("tidycensus")

[*Data curation and cleaning*]{.underline}

To work with this dataset, I loaded the necessary libraries and merged the county population data with the birth data by "County.of.Residence.Code". To clean the data, I am removing redundant columns and renaming my variables. I am also creating a new variable for preterm birth by grouping the gestational ages that are \<37 weeks. I then merge this with my county shape files.

```{r}
#load necessary libraries
library(tidyverse)
library(sf)
library(tigris)
library(tidycensus)
library(leaflet)
options(tigris_use_cache = TRUE)
options(progress_enabled = FALSE)

#Load county-level birth data downloaded from CDC Wonder
birth_data <- read.delim("https://raw.githubusercontent.com/rosemalbert/BMIN503_Final_Project/refs/heads/master/Natality%2C%202016-2023%20expanded_sex.txt")

county_data <- read.delim("https://raw.githubusercontent.com/rosemalbert/BMIN503_Final_Project/refs/heads/master/Natality%2C%202016-2023%20expanded%20_county.txt")

#view column names
colnames(birth_data)
colnames(county_data)

#merge birth_data and county_data
merged_data <- left_join(birth_data, county_data, by = "County.of.Residence.Code")

#clean merged_data 
library(dplyr)

# clean merged data by removing unnecessary columns, checking discrepancies, and renaming
cleaned_data <- merged_data %>%
    # Remove 'Notes.x' column
    select(-Notes.x) %>%
    
    # Check for discrepancies between 'County.of.Residence.x' and 'County.of.Residence.y'
    # 
    mutate(
        County.of.Residence = ifelse(
            County.of.Residence.x == County.of.Residence.y, 
            County.of.Residence.x, 
            NA  
        )
    ) %>%
    
    # Merge 'County.of.Residence.x' and 'County.of.Residence.y'
    select(-County.of.Residence.x, -County.of.Residence.y) %>%
    
    # Rename 'Births.y' to 'Total.Births'
    rename(
        Total.Births = Births.y
    ) %>%
    
    # Remove 'Notes.y' column
    select(-Notes.y) %>%
  
    # Remove sex of infant code
    select(-Sex.of.Infant.Code) %>%
    
    # Remove 'X..of.Total.Births.y' and 'X..of.Total.Births.x'
    select(-c(X..of.Total.Births.x, X..of.Total.Births.y)) %>%
  
   # Remove 'OE.Gestational.Age.Recode.10.Code'
    select(-OE.Gestational.Age.Recode.10.Code) %>%
  
   # Remove 'NICU.Admission.Code'
    select(-NICU.Admission.Code) %>%
  
    # Filter out rows where 'NICU.Admission' or 'OE.Gestational.Age.Recode.10' are "Unknown"
    filter(
        !NICU.Admission %in% c("Unknown or Not Stated", ""),
        !OE.Gestational.Age.Recode.10 %in% c("Unknown or Not Stated", "")
    ) %>%
    
    # Remove any duplicates
    distinct()

cleaned_data <- cleaned_data %>%
  mutate(County.of.Residence.Code = as.character(County.of.Residence.Code))


# Convert 'County.of.Residence.Code' to character before merging
preterm_rate_data <- cleaned_data %>%
   mutate(
        Is.Preterm = OE.Gestational.Age.Recode.10 %in% c("28 - 31 weeks", "32 - 35 weeks", "36 weeks", "20 - 27 weeks", "Under 20 weeks"),
        County.of.Residence.Code = as.character(County.of.Residence.Code)  # Convert to character
    ) %>%
   group_by(County.of.Residence, County.of.Residence.Code) %>%  # Keep 'County.of.Residence.Code' in the group_by
    summarise(
        Preterm.Births = sum(ifelse(Is.Preterm, Births.x, 0), na.rm = TRUE),
        Preterm.Birth.Rate = (Preterm.Births / Total.Births) * 100
    ) %>%
   ungroup()

#load census shapefile data and merge by county FIPs 
counties_sf <- counties(cb = TRUE, resolution = "20m") # cb = TRUE for a simplified geometry

# Merge the cleaned data with the counties shapefile
county_map_preterm_data <- left_join(counties_sf, preterm_rate_data, by = c("GEOID" = "County.of.Residence.Code"))

county_map_cleaned_data <- left_join(counties_sf, cleaned_data, by = c("GEOID" = "County.of.Residence.Code"))

# Ensure the 'Sex.of.Infant' column is available and that it's a factor or character
cleaned_data$Sex.of.Infant <- as.factor(cleaned_data$Sex.of.Infant)




```

To create a data frame to assess preterm birth rates, I stratified the preterm-birth data by sex and calculated the preterm birth rate for each county by dividing the number of preterm births by the total number of births in each county, multiplied by 100 to report as a percentage.

```{r}
# Create a new data frame stratified by sex
preterm_sex_data <- cleaned_data %>%
  mutate(
    Is.Preterm = OE.Gestational.Age.Recode.10 %in% c("28 - 31 weeks", "32 - 35 weeks", "36 weeks", "20 - 27 weeks", "Under 20 weeks"),
    County.of.Residence.Code = as.character(County.of.Residence.Code)  # Convert to character
  ) %>%
  group_by(County.of.Residence, County.of.Residence.Code, Sex.of.Infant) %>%
  summarise(
    Preterm.Births = sum(ifelse(Is.Preterm, Births.x, 0), na.rm = TRUE),
    Preterm.Birth.Rate = (Preterm.Births / Total.Births) * 100
  ) %>%
  ungroup()


```

[*Analysis plan*]{.underline}

*Exploratory analysis of data:*

-   Generate county-level choropleth maps of birth rates ((births/total population)\*1000 for each county).

-   Generate county-level choropleth maps of preterm birth rates (\<37 gestational age births/total population).

-   Generate bar graphs showing sex-stratified distribution of births by gestational age groups.

-   Generate bar graphs showing sex-stratified distribution of NICU admission rates by gestational age groups.

-   Conduct logistic regression to identify relationships between gestational age and sex with the outcome of NICU admission

*Additional data analysis:* Identify counties with highest and lowest preterm birth rates, and the highest and lowest NICU admission rates.

## Results {#sec-results}

First, I developed county-level choropleth maps of birth rates (live births per 1000 people) for the 496 counties represented in this dataset. I used this output to identify the county with the highest birth rate (Rockland County, NY; 19.4) and the lowest birth rate (Charlotte County, FL; 4.99). The average birth rate was 10.81.

```{r}
#load necessary libraries
library(tidyverse)
library(sf)
library(tidycensus)
library(ggspatial)
library(leaflet)
library(cowplot)
library(nhanesA)
library(haven)
library(viridis)

# Convert Birth.Rate to numeric (if necessary)
county_map_cleaned_data$Birth.Rate <- as.numeric(county_map_cleaned_data$Birth.Rate)

# Recheck the structure of the column
str(county_map_cleaned_data$Birth.Rate)

# Remove rows where Birth.Rate is NA
county_map_cleaned_data <- county_map_cleaned_data %>%
  filter(!is.na(Birth.Rate))

#load map theme
map_theme <- function() {
  theme_minimal() +  
    theme(
      axis.line = element_blank(), 
      axis.text = element_blank(),  
      axis.title = element_blank(),
      panel.grid = element_line(color = "white"), 
      legend.key.size = unit(0.8, "cm"),     
      legend.text = element_text(size = 16),   
      legend.title = element_text(size = 16)
    )
}

#create my palette
myPalette <- colorRampPalette(viridis(100))

# Generate the choropleth map for birth rates
birth_rates_map <- ggplot(data = county_map_cleaned_data) +
  geom_sf(aes(fill = Birth.Rate)) +  # Map Preterm Birth Rate to the fill
  map_theme() +  # Apply the custom theme
  ggtitle("2023 Birth Rate (live births per 1000 people)") +
  scale_fill_gradientn(name = "Birth Rate\nrate", colours = myPalette(100))
  coord_sf(xlim = c(-79.5, -75), ylim = c(37, 39))

# Print the map
print(birth_rates_map)

#How many counties are represented in this analysis?
num_unique_geoid_counties <- length(unique(county_map_cleaned_data$GEOID))
print(num_unique_geoid_counties)

#Which counties have the highest and lowest birth rates?
# Find the county with the highest Birth Rate and its value (show only the first entry)
highest_birth_rate <- county_map_cleaned_data %>%
  filter(Birth.Rate == max(Birth.Rate, na.rm = TRUE)) %>%
  slice(1)  # Select the first row

cat("County with the highest Birth Rate: ", highest_birth_rate$County.of.Residence, "\n")
cat("Highest Birth Rate: ", highest_birth_rate$Birth.Rate, "\n")
# Find the county with the lowest Birth Rate and its value (show only the first entry)

lowest_birth_rate <- county_map_cleaned_data %>%
  filter(Birth.Rate == min(Birth.Rate, na.rm = TRUE)) %>%
  slice(1)  # Select the first row

cat("County with the lowest Birth Rate: ", lowest_birth_rate$County.of.Residence, "\n")
cat("Lowest Birth Rate: ", lowest_birth_rate$Birth.Rate, "\n")

# Calculate the average Birth Rate
average_birth_rate <- county_map_cleaned_data %>%
  summarise(Average_Birth_Rate = mean(Birth.Rate, na.rm = TRUE))

cat("Average Birth Rate: ", average_birth_rate$Average_Birth_Rate, "\n")


```

To better visualize and explore the birth rates, I then generated an interactive choropleth map of birth rates by county. This made it easier to identify regional trends and easily navigate to counties of interest such as Philadelphia County. Philadelphia County has a birth rate above average at 11.8 live births per 1000 people. My hometown in Hamilton County, TN has a similar birth rate at 11.9 live births per 1000 people.

```{r}
#generate interactive choropleth map 
library(leaflet)
library(RColorBrewer)

# Define the color scale for the Birth Rate using colorBin
pal_fun <- colorBin(palette = brewer.pal(9, "YlOrRd")[c(1:5, 7)], 
                    bins = c(0, 5, 10, 15, 20, 25), 
                    reverse = FALSE)

# Create the popup message for each county
pu_message <- paste0(county_map_cleaned_data$County.of.Residence, 
                     "<br>Birth Rate: ",      
                     round(county_map_cleaned_data$Birth.Rate, 1), " live births per 1000 people")

# Create the leaflet map with the polygons
leaflet(county_map_cleaned_data) |>
  addPolygons(stroke = FALSE,               
              fillColor = ~pal_fun(Birth.Rate),
              fillOpacity = 0.7, smoothFactor = 0.5,
              popup = pu_message) |>   
  addProviderTiles(providers$CartoDB.Positron) |>   
  addLegend("bottomright",               
            pal = pal_fun,              
            values = ~Birth.Rate,  
            title = 'Birth Rate',    
            opacity = 1) |>             
  addScaleBar()

```

I repeated the analysis to generate county-level choropleth maps of preterm birth rates ((\<37 gestational age births/total number of live births)\*100). The average preterm birth rate of the counties in this dataset is 9.5%. Hinds County, MS has the highest preterm birth rate (17.85%) while Tompkins County, NY has the lowest preterm birth rate (2.63%).

```{r}

# Convert Preterm.Birth.Rate to numeric
county_map_preterm_data$Preterm.Birth.Rate <- as.numeric(county_map_preterm_data$Preterm.Birth.Rate)

# Recheck the structure of the column
str(county_map_preterm_data$Preterm.Birth.Rate)

# Remove rows where Birth.Rate is NA
county_map_preterm_data <- county_map_preterm_data %>%
  filter(!is.na(Preterm.Birth.Rate))

# Generate the choropleth map for preterm birth rates
preterm_birth_rates_map <- ggplot(data = county_map_preterm_data) +
  geom_sf(aes(fill = Preterm.Birth.Rate)) +  # Map Preterm Birth Rate to the fill
  map_theme() +  # Apply the custom theme
  ggtitle("2023 Preterm Birth Rate % (<37 gestational age births/total number of live births)") +
  scale_fill_gradientn(name = "Preterm Birth Rate\nrate", colours = myPalette(100))
  coord_sf(xlim = c(-79.5, -75), ylim = c(37, 39))
  
preterm_birth_rates_map

#How many counties are represented in this analysis?
num_unique_geoid_counties_preterm <- length(unique(county_map_preterm_data$GEOID))
print(num_unique_geoid_counties_preterm)
  

#Which counties have the highest and lowest preterm birth rates?
# Find the county with the highest preterm Birth Rate and its value (show only the first entry)
highest_preterm_birth_rate <- county_map_preterm_data %>%
  filter(Preterm.Birth.Rate == max(Preterm.Birth.Rate, na.rm = TRUE)) %>%
  slice(1)  # Select the first row

cat("County with the highest preterm Birth Rate: ", highest_preterm_birth_rate$County.of.Residence, "\n")
cat("Highest preterm Birth Rate: ", highest_preterm_birth_rate$Preterm.Birth.Rate, "\n")
# Find the county with the lowest preterm Birth Rate and its value (show only the first entry)
lowest_preterm_birth_rate <- county_map_preterm_data %>%
  filter(Preterm.Birth.Rate == min(Preterm.Birth.Rate, na.rm = TRUE)) %>%
  slice(1)  # Select the first row

cat("County with the lowest preterm Birth Rate: ", lowest_preterm_birth_rate$County.of.Residence, "\n")
cat("Lowest preterm Birth Rate: ", lowest_preterm_birth_rate$Preterm.Birth.Rate, "\n")

#What is the average preterm birth rate? 
# Calculate the average preterm birth rate
average_preterm_birth_rate <- mean(county_map_preterm_data$Preterm.Birth.Rate, na.rm = TRUE)

cat("Average preterm birth rate: ", round(average_preterm_birth_rate, 2), "\n")


```

I now want a similarly interactive map of preterm birth data. From this, I can identify that Philadelphia has an above average preterm birth rate at 11%. My hometown in Hamilton County, TN has a similar preterm birth rate at 10.6%.

```{r}
#generate interactive choropleth map 
library(leaflet)
library(RColorBrewer)

# Define the color scale for the Birth Rate using colorBin
pal_fun <- colorBin(palette = brewer.pal(9, "YlOrRd")[c(1:5, 7)], 
                    bins = c(0, 5, 10, 15, 20, 25), 
                    reverse = FALSE)

county_map_preterm_data$Preterm.Birth.Rate <- as.numeric(county_map_preterm_data$Preterm.Birth.Rate)

# Create the popup message for each county
pu_message <- paste0(county_map_preterm_data$County.of.Residence, 
                     "<br>Preterm Birth Rate: ",      
                     round(county_map_preterm_data$Preterm.Birth.Rate, 1), "%")

# Create the leaflet map with the polygons
leaflet(county_map_preterm_data) |>
  addPolygons(stroke = FALSE,               
              fillColor = ~pal_fun(Preterm.Birth.Rate),
              fillOpacity = 0.7, smoothFactor = 0.5,
              popup = pu_message) |>   
  addProviderTiles(providers$CartoDB.Positron) |>   
  addLegend("bottomright",               
            pal = pal_fun,              
            values = ~Preterm.Birth.Rate,  
            title = 'Preterm Birth Rate',    
            opacity = 1) |>             
  addScaleBar()

```

I now want to interrogate the total number of births by gestational age group and visualize the distribution using a bar graph. I can see that most of the infants are born at 32-35 weeks and 37-39 weeks gestational age. The \<20 week gestational age group is least represented.

```{r}
# Summarize the data by gestational age for total births
gestational_births_summary <- cleaned_data %>%
  group_by(OE.Gestational.Age.Recode.10) %>%
  summarise(
    Total_Births = n()  # Count the total number of births in each gestational age category
  ) %>%
  ungroup()

# Plot the total number of births by gestational age
ggplot(gestational_births_summary, aes(x = OE.Gestational.Age.Recode.10, y = Total_Births, fill = OE.Gestational.Age.Recode.10)) +
  geom_bar(stat = "identity", show.legend = FALSE) +
  labs(
    title = "Total Number of Births by Gestational Age",
    x = "Gestational Age at Birth",
    y = "Total Number of Births"
  ) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

Now I want to explore the proportion of NICU admission by gestational age. We can see a general trend where lower gestational ages have a higher proportion of NICU admission. Notably, infants less than 20 weeks old do not follow this trend, though this may represent survivor bias (infants born less than 20 weeks old may not survive for very long after birth or are inadequately powered to be assessed in this analysis). Infants born 28-31 weeks gestational age had the highest proportion of NICU admission.

```{r}
# Summarizing the data by gestational age and NICU admission status
gestational_nicu_summary <- cleaned_data %>%
  group_by(OE.Gestational.Age.Recode.10) %>%
  summarise(
    Total_Births = n(),  # Count the total number of births in each gestational age category (both Yes and No)
    NICU_Admissions = sum(NICU.Admission == "Yes", na.rm = TRUE),  # Count NICU admissions
    Proportion_NICU_Admission = NICU_Admissions / Total_Births  # Calculate proportion of NICU admissions
  ) %>%
  ungroup()

# Now, plot the proportion of NICU admissions by gestational age
library(ggplot2)

ggplot(gestational_nicu_summary, aes(x = OE.Gestational.Age.Recode.10, y = Proportion_NICU_Admission, fill = OE.Gestational.Age.Recode.10)) +
  geom_bar(stat = "identity", show.legend = FALSE) +
  labs(
    title = "Proportion of NICU Admissions by Gestational Age",
    x = "Gestational Age at Birth",
    y = "Proportion of NICU Admissions"
  ) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))


```

I repeated this analysis stratified by sex, first by visualizing the number of births per gestational age.

```{r}
gestational_nicu_sex_summary <- cleaned_data %>%
  group_by(OE.Gestational.Age.Recode.10, Sex.of.Infant) %>%
  summarise(
    Total_Births = n()  # Count the total number of infants for each gestational age and sex
  ) %>%
  ungroup()

# Print the summarized data to check
print(gestational_nicu_sex_summary)

library(ggplot2)

ggplot(gestational_nicu_sex_summary, aes(x = OE.Gestational.Age.Recode.10, y = Total_Births, fill = Sex.of.Infant)) +
  geom_bar(stat = "identity", position = "dodge") +  # Use 'dodge' for separate bars for each sex
  labs(
    title = "Number of Infants Born by Gestational Age and Sex",
    x = "Gestational Age at Birth",
    y = "Total Number of Infants"
  ) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

I then stratified this data by sex to visualize gestational age and proportion of NICU admissions.

```{r}
gestational_nicu_sex_summary <- cleaned_data %>%
  group_by(OE.Gestational.Age.Recode.10, Sex.of.Infant) %>%
  summarise(
    Total_Births = n(),  # Count the total number of births in each gestational age category and sex
    NICU_Admissions = sum(NICU.Admission == "Yes", na.rm = TRUE),  # Count NICU admissions
    Proportion_NICU_Admission = NICU_Admissions / Total_Births  # Calculate proportion of NICU admissions
  ) %>%
  ungroup()

# Print the summarized data to check
print(gestational_nicu_sex_summary)

library(ggplot2)

ggplot(gestational_nicu_sex_summary, aes(x = OE.Gestational.Age.Recode.10, y = Proportion_NICU_Admission, fill = Sex.of.Infant)) +
  geom_bar(stat = "identity", position = "dodge") +  # Use 'dodge' for separate bars for each sex
  labs(
    title = "Proportion of NICU Admissions by Gestational Age and Sex",
    x = "Gestational Age at Birth",
    y = "Proportion of NICU Admissions"
  ) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))


```

I then ran a logistic regression with gestational age only. Each variable was significant except for gestational age \<20 weeks. The \<20 weeks age group also has a high standard error (108.2). Moving forward, this will be excluded in the analysis.

```{r}
# Convert NICU.Admission to binary (1 for "Yes", 0 for "No")
 cleaned_data$NICU.Admission <- ifelse(cleaned_data$NICU.Admission == "Yes", 1, 0)
  
 # Fit the logistic regression model again
 logistic_model <- glm(NICU.Admission ~ OE.Gestational.Age.Recode.10,  
                      data = cleaned_data, 
                      family = "binomial")

# Summary of the logistic regression model
summary(logistic_model)
```

I repeated the analysis to exclude \<20 weeks gestational age.

```{r}

cleaned_data$OE.Gestational.Age.Recode.10 <- factor(cleaned_data$OE.Gestational.Age.Recode.10, 
                                                    levels = c("40 weeks",
                                                               "20 - 27 weeks",
                                                               "28 - 31 weeks", 
                                                               "32 - 35 weeks", 
                                                               "36 weeks", 
                                                               "37 - 39 weeks", 
                                                               "41 weeks", 
                                                               "42 weeks or more"))
 
  # Fit the logistic regression model again
 logistic_model <- glm(NICU.Admission ~ OE.Gestational.Age.Recode.10,  
                      data = cleaned_data, 
                      family = "binomial")

# Summary of the logistic regression model
summary(logistic_model)
```

Using these data, I then calculated odds ratios for gestational age on the outcome of NICU admission. From these data, 28-31 weeks and 20-27 weeks had the highest positive association with NICU admission, Gestational age of 41 and 41 weeks or more had an odds ratio less than 1, indicating these infants are less likely to be admitted to the NICU.

```{r}
# Extract model coefficients
coefficients <- summary(logistic_model)$coefficients

# Calculate odds ratios (exponentiate the coefficients)
odds_ratios <- exp(coefficients[, "Estimate"])
lower_ci <- exp(coefficients[, "Estimate"] - 1.96 * coefficients[, "Std. Error"])
upper_ci <- exp(coefficients[, "Estimate"] + 1.96 * coefficients[, "Std. Error"])

# Add confidence intervals to the data frame
odds_ratios_df <- data.frame(
  Gestational_Age = rownames(coefficients),
  Odds_Ratio = odds_ratios,
  Lower_CI = lower_ci,
  Upper_CI = upper_ci
)

# Remove the intercept row
odds_ratios_df <- odds_ratios_df[odds_ratios_df$Gestational_Age != "(Intercept)", ]

print(odds_ratios_df)

library(ggplot2)

ggplot(odds_ratios_df, aes(x = reorder(Gestational_Age, Odds_Ratio), y = Odds_Ratio)) +
  geom_pointrange(aes(ymin = Lower_CI, ymax = Upper_CI), 
                  color = "blue", 
                  shape = 16) +  # Add points with error bars
  coord_flip() +  # Flip axes for readability
  geom_hline(yintercept = 1, linetype = "dashed", color = "red") +  # Reference line at OR = 1
  labs(
    title = "Odds Ratios for NICU Admission",
    x = "Variable",
    y = "Odds Ratio (OR)"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Improve label readability

```

I repeated this analysis to conduct a logistic regression and calculate odds ratios for gestational age, this time including male sex. Being born male had a slight association with NICU admission (OR: 1.1, 95% CI: 1.022-1.20).

```{r}
# Fit the logistic regression model with Gestational age and Sex of infant
logistic_model <- glm(NICU.Admission ~ OE.Gestational.Age.Recode.10 + Sex.of.Infant, 
                      data = cleaned_data, 
                      family = "binomial")

# Show the model summary
summary(logistic_model)

# Extract model coefficients
coefficients <- summary(logistic_model)$coefficients

# Calculate odds ratios (exponentiate the coefficients)
odds_ratios <- exp(coefficients[, "Estimate"])
lower_ci <- exp(coefficients[, "Estimate"] - 1.96 * coefficients[, "Std. Error"])
upper_ci <- exp(coefficients[, "Estimate"] + 1.96 * coefficients[, "Std. Error"])

# Create a data frame of the odds ratios
odds_ratios_df <- data.frame(
  Variable = rownames(coefficients),
  Odds_Ratio = odds_ratios,
  Lower_CI = lower_ci,
  Upper_CI = upper_ci
)

# Remove the intercept row
odds_ratios_df <- odds_ratios_df[odds_ratios_df$Variable != "(Intercept)", ]

# Print the odds ratios data frame
print(odds_ratios_df)

library(ggplot2)

ggplot(odds_ratios_df, aes(x = reorder(Variable, Odds_Ratio), y = Odds_Ratio)) +
  geom_pointrange(aes(ymin = Lower_CI, ymax = Upper_CI), 
                  color = "blue", 
                  shape = 16) +  # Add points with error bars
  coord_flip() +  # Flip axes for readability
  geom_hline(yintercept = 1, linetype = "dashed", color = "red") +  # Reference line at OR = 1
  labs(
    title = "Odds Ratios for NICU Admission",
    x = "Variable",
    y = "Odds Ratio (OR)"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Improve label readability

```

To interrogate if males more likely to be preterm, I stratified the data into preterm (\<37 weeks) and term gestational age groups and conducted a logistic regression. Male sex was not significant (p = 0.482).

```{r}
# Create binary variable for preterm (1) vs term (0)
cleaned_data$Preterm_Binary <- ifelse(cleaned_data$OE.Gestational.Age.Recode.10 %in% c("Under 20 weeks", "20 - 27 weeks", "28 - 31 weeks", "32 - 35 weeks", "36 weeks"), 1, 0)

# Logistic regression to test if males are more likely to be preterm
logistic_model <- glm(Preterm_Binary ~ Sex.of.Infant, data = cleaned_data, family = "binomial")
summary(logistic_model)

```

I visualized number of infants born term and preterm stratified by sex using a bar graph.

```{r}
library(ggplot2)

# Summarize the data by Sex and Preterm status
summary_data <- cleaned_data %>%
  group_by(Sex.of.Infant, Preterm_Binary) %>%
  summarize(Count = n(), .groups = "drop")

# Map Preterm_Binary to labels for the plot
summary_data$Preterm_Label <- ifelse(summary_data$Preterm_Binary == 1, "Preterm", "Term")

# Create the bar plot with Gestational Age on the x-axis
ggplot(summary_data, aes(x = Preterm_Label, y = Count, fill = Sex.of.Infant)) +
  geom_bar(stat = "identity", position = "dodge") +  # Dodge for side-by-side bars
  labs(
    title = "Number of Infants Born Term and Preterm Stratified by Sex",
    x = "Gestational Age",
    y = "Number of Infants",
    fill = "Sex of Infant"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),  # Angle x-axis labels for better readability
    legend.position = "top"
  )


```

To identify if males are more likely to be born extremely preterm (\<28 wks), I conducted a logistic regression by combining the age groups \<20 weeks and 20-27 weeks to create a binary outcome variable. Male sex was not significant (p = 0.344).

```{r}
# Create a binary variable for extremely preterm (<28 weeks)
cleaned_data$Extremely_Preterm <- ifelse(cleaned_data$OE.Gestational.Age.Recode.10 == "Under 20 weeks" |
                          cleaned_data$OE.Gestational.Age.Recode.10 == "20 - 27 weeks", 1, 0)

# Fit a logistic regression model
model <- glm(Extremely_Preterm ~ Sex.of.Infant, data = cleaned_data, family = binomial)

# Summary of the model
summary(model)

```

## Discussion

## Conclusion

This the conclusion. The @sec-results can be invoked here.

## References

Albert, R., Lee, A., Lingappan, K. Response to Therapeutic Interventions in the NICU: Role of Sex as a Biological Variable. 2023. *Neoreviews, 24*(12), e797-e805.

Bell, E.F., et al., Mortality, in-hospital morbidity, care practices, and 2-year outcomes for extremely preterm infants in the US, 2013-2018. *JAMA*, 2022. 327(3): p. 248-263.

Callaghan WM, MacDorman MF, Rasmussen SA, Qin C, Lackritz EM. The contribution of preterm birth to infant mortality rates in the United States. Pediatrics. 2006;118(4):1566-1573.

Inkster AM, Fernández-Boyano I, Robinson WP. Sex differences are here to stay: relevance to prenatal care. Journal of Clinical Medicine. 2021 Jul 5;10(13):3000.

NOT-OD-15-102: Consideration of Sex as a Biological Variable in NIH-Funded Research. https://grants.nih.gov/grants/guide/notice-files/NOT-OD-15-102.html. Accessed 10 Dec. 2024.

Thebaud, B., et al., Bronchopulmonary dysplasia. *Nat Rev Dis Primers,* 2019. **5**(1): p. 78.

van Westering-Kroon, E., et al., Male Disadvantage in Oxidative Stress-Associated Complications of Prematurity: A Systematic Review, Meta-Analysis and Meta-Regression. *Antioxidants* (Basel), 2021. 10(9).
